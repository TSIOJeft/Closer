<Application x:Class="Closer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Closer"
             xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
             ShutdownMode="OnLastWindowClose"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:ThemesDictionary Theme="Light" />
                <ui:ControlsDictionary />
            </ResourceDictionary.MergedDictionaries>
            <FontFamily x:Key="SegoeFluentIcons">pack://application:,,,/font/#Segoe Fluent Icons</FontFamily>
                <Style x:Key="commonButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#616161" />
                <Setter Property="Height" Value="42" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Tag" Value="collapse" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="5">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                                  Margin="0 0 0 0" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#388E3C" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="Tag" Value="Visible" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="TextBlock" x:Key="menuItemLabel">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1" />
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Visibility" Value="Visible">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                                                     From="0"
                                                     Duration="0:00:01" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <Style TargetType="Image">
                <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
            </Style>
            
            <Style TargetType="ListBoxItem" x:Key="ListBox">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Transparent" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="transparentButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                
                <Setter Property="Template">
                    
                    <Setter.Value>
                        
                        <ControlTemplate TargetType="Button">
                            
                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                              Margin="0 0 0 0" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="menuButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#000000" />
                <Setter Property="Height" Value="42" />
                <Setter Property="FontSize" Value="14" />
                <!-- <Setter Property="FontWeight" Value="Bold"/> -->
                <Setter Property="Width" Value="162" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Tag" Value="collapse" />

                <Setter Property="Template">

                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="5">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                                  Margin="0 0 0 0" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#F5F5F5" />

                        <Setter Property="Tag" Value="Visible" />
                    </Trigger>
                    <Trigger Property="Selector.IsSelected" Value="True">
                        <!-- <Setter Property="Foreground" Value="#2979ff"></Setter> -->
                        <!-- <Setter Property="Background" Value="#2979FF"/> -->
                        <Setter Property="Tag" Value="Visible" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="NavigationItemSelectBack" TargetType="{x:Type Border}">
                <Setter Property="Width" Value="0" />
                <Setter Property="Background" Value="#EEEEEE" />
                <Style.Triggers>
                    <Trigger Property="Selector.IsSelected" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Width"
                                                     To="162" Duration="0:0:0.8">
                                        <DoubleAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Width"
                                                     To="0" Duration="0:0:0.8">
                                        <DoubleAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="NavigationItemSelectIndicator" TargetType="{x:Type Border}">
                <Setter Property="Height" Value="0" />
                <Setter Property="Background" Value="#388E3C" />
                <Style.Triggers>
                    <Trigger Property="Selector.IsSelected" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Height"
                                                     To="20" Duration="0:0:0.5">
                                        <DoubleAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Height"
                                                     To="0" Duration="0:0:0.5">
                                        <DoubleAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </Style.Triggers>


            </Style>
            <Style x:Key="ListItemMouseOverBack" TargetType="Border">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="Background" Value="#FAFAFA"></Setter>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#EEEEEE"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="TransparentTextBox" TargetType="TextBox"></Style>
            <Style x:Key="TextBoxStyle" TargetType="TextBox">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border Background="{TemplateBinding Background}" BorderThickness="1"
                                    BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5">
                                <TextBox Margin="8 0 8 0" VerticalAlignment="Center"
                                         Style="{StaticResource TransparentTextBox}" FontSize="20" BorderThickness="0"
                                         Background="Transparent" x:Name="input"
                                         Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Text, Mode=TwoWay}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#F5F5F5"></Setter>
                        <Setter Property="BorderBrush" Value="#BDBDBD"></Setter>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="Background" Value="#FAFAFA"></Setter>
                        <Setter Property="BorderBrush" Value="#F5F5F5"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="GreyButtonBack" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" CornerRadius="5">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                                  Margin="0" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#77E0E0E0" />
                    </Trigger>
                </Style.Triggers>
            </Style>

         
            <Style x:Key="ListViewItemContainer" TargetType="{x:Type ListViewItem}">

                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform x:Name="scaleTransform" />
                    </Setter.Value>
                </Setter>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform x:Name="translateTransform" />
                    </Setter.Value>
                </Setter>
                <Setter Property="RenderTransformOrigin" Value=".5,.5"></Setter>

                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <ContentPresenter />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1"
                                                     Duration="0:0:0.5">
                                        <DoubleAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseInOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                                                     From="50" To="0" Duration="0:0:0.5">
                                        <DoubleAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="PreviewMouseRightButtonDown">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                                 To="0.97" Duration="0:0:0.5">
                                    <DoubleAnimation.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"></CircleEase>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                                 To="0.97" Duration="0:0:0.5">
                                    <DoubleAnimation.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"></CircleEase>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="PreviewMouseRightButtonUp">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                                 To="1" Duration="0:0:0.5">
                                    <DoubleAnimation.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"></CircleEase>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                                 To="1" Duration="0:0:0.5">
                                    <DoubleAnimation.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"></CircleEase>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="MouseLeave">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                                 To="1" Duration="0:0:0.5">
                                    <DoubleAnimation.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"></CircleEase>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                                 To="1" Duration="0:0:0.5">
                                    <DoubleAnimation.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"></CircleEase>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>